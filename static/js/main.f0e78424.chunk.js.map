{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","PostsList","idOfUser","selectedPostId","setSelectedPostId","setPost","useState","posts","setPosts","getPosts","userId","fetch","then","response","ok","json","Error","getUserPosts","res","catch","error","console","log","useEffect","className","map","post","title","id","type","onClick","NewCommentForm","postId","getComments","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","createComments","comment","method","body","JSON","stringify","headers","createPostComments","onSubmit","event","preventDefault","name","email","placeholder","value","onChange","target","required","PostDetails","comments","setComments","hideComments","setHideComments","deleteCounter","setDeleteCounter","deleteComment","deletePostComments","getPostComments","length","App","setIdOfUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0e78424.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ninterface Props {\n  idOfUser: number;\n  selectedPostId: number;\n  setSelectedPostId: (arg: number) => void;\n  setPost: (arg: Post | null) => void;\n}\n\nexport const PostsList: React.FC<Props>\n  = ({\n    idOfUser,\n    selectedPostId,\n    setSelectedPostId,\n    setPost,\n  }) => {\n    const [posts, setPosts] = useState<Post[]>([]);\n\n    const getPosts = (userId: number) => {\n      getUserPosts(userId)\n        .then(res => setPosts(res))\n        // eslint-disable-next-line no-console\n        .catch(error => console.log(error, 'Request failed'));\n    };\n\n    useEffect(() => {\n      getPosts(idOfUser);\n    }, [idOfUser]);\n\n    return (\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n\n        <ul\n          className=\"PostsList__list\"\n          data-cy=\"postDetails\"\n        >\n          {posts && (posts.map(post => (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                {post.title}\n              </div>\n\n              {selectedPostId === post.id\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"PostsList__button button\"\n                    onClick={() => {\n                      setSelectedPostId(0);\n                      setPost(null);\n                    }}\n                  >\n                    Close\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"PostsList__button button\"\n                    onClick={() => {\n                      setSelectedPostId(post.id);\n                      setPost(post);\n                    }}\n                  >\n                    Open\n                  </button>\n                )}\n            </li>\n          )))}\n        </ul>\n      </div>\n    );\n  };\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId: number): Promise<Post[]> {\n  return fetch(`${BASE_URL}/posts${userId === 0 ? '' : `?userId=${userId}`}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      } else {\n        return response.json();\n      }\n    });\n}\n\nexport function getPostComments(postId: number): Promise<Comment[]> {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong.');\n      } else {\n        return response.json();\n      }\n    });\n}\n\nexport function createPostComments(comment: NewComment) {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify(comment),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(response => response.json());\n}\n\nexport function deletePostComments(id: number) {\n  return fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  });\n}\n","import React, { useState } from 'react';\nimport { createPostComments } from '../../api/posts';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  postId: number;\n  getComments: (id: number) => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId, getComments,\n}) => {\n  const [commentName, setCommentName] = useState('');\n  const [commentEmail, setCommentEmail] = useState('');\n  const [commentBody, setCommentBody] = useState('');\n\n  const createComments = (comment: NewComment) => {\n    createPostComments(comment);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newComment = {\n      name: commentName,\n      email: commentEmail,\n      body: commentBody,\n      postId,\n    };\n\n    createComments(newComment);\n    getComments(postId);\n\n    setCommentName('');\n    setCommentEmail('');\n    setCommentBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => {\n        onSubmit(event);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentName}\n          onChange={event => {\n            setCommentName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentEmail}\n          onChange={event => {\n            setCommentEmail(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentBody}\n          onChange={event => {\n            setCommentBody(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { deletePostComments, getPostComments } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  post: Post;\n}\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [comments, setComments] = useState<Comment[] | null>(null);\n  const [hideComments, setHideComments] = useState(false);\n  const [deleteCounter, setDeleteCounter] = useState(1);\n\n  const deleteComment = (id: number) => {\n    deletePostComments(id);\n    setDeleteCounter(deleteCounter + 1);\n  };\n\n  const getComments = (postId: number) => {\n    getPostComments(postId)\n      .then(res => setComments(res))\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error, 'Request failed'));\n  };\n\n  useEffect(() => {\n    getComments(post.id);\n  }, [post, deleteCounter]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n\n        <button\n          type=\"button\"\n          className=\"button button--pb\"\n          onClick={() => {\n            if (comments?.length !== 0) {\n              setHideComments(!hideComments);\n            }\n          }}\n        >\n          {`${hideComments ? 'Show' : 'Hide'} ${comments?.length} comments`}\n        </button>\n\n        {!hideComments && (\n          <ul\n            className=\"PostDetails__list\"\n            data-cy=\"postDetails\"\n          >\n            {comments?.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n            getComments={getComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [idOfUser, setIdOfUser] = useState<number>(0);\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n  const [post, setPost] = useState<Post | null>(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={idOfUser}\n            onChange={event => {\n              setIdOfUser(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            idOfUser={idOfUser}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n            setPost={setPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {post && <PostDetails post={post} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}